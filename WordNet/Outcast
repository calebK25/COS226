import edu.princeton.cs.algs4.In;
import edu.princeton.cs.algs4.StdOut;

public class Outcast {
    private WordNet net;

    // constructor takes a WordNet object
    public Outcast(WordNet wordnet) {
        net = wordnet;

    }


    // given an array of WordNet nouns, return an outcast
    public String outcast(String[] nouns) {
        int maxdist = Integer.MIN_VALUE;
        String outcast = ("");

        for (String n : nouns) {
            int dist = 0;

            for (int i = 0; i < nouns.length; i++) {

                dist += net.distance(n, nouns[i]);
            }
            if (dist > maxdist) {
                maxdist = dist;
                outcast = n;
            }
        }
        return outcast;

    }

    // test client (see below)
    public static void main(String[] args) {
        WordNet wordnet = new WordNet(args[0], args[1]);
        Outcast outcast = new Outcast(wordnet);
        for (int t = 2; t < args.length; t++) {
            In in = new In(args[t]);
            String[] nouns = in.readAllStrings();
            StdOut.println(args[t] + ": " + outcast.outcast(nouns));
        }

    }

}
